// <auto-generated />
using System;
using Cosmos_Odyssey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cosmos_Odyssey.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201226102249_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.DemandingCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemandingCustomer");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.From", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("From");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Leg", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PriceListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RouteInfoId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.HasIndex("RouteInfoId");

                    b.ToTable("Leg");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Pricelist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Ready")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pricelist");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Provider", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FlightEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FlightStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LegId");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DemandingCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DemandingCustomerId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.RouteInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Distance")
                        .HasColumnType("bigint");

                    b.Property<string>("FromId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ToId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("RouteInfo");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.To", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("To");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Leg", b =>
                {
                    b.HasOne("Cosmos_Odyssey.Entities.Pricelist", "Pricelist")
                        .WithMany("Legs")
                        .HasForeignKey("PriceListId");

                    b.HasOne("Cosmos_Odyssey.Entities.RouteInfo", "RouteInfo")
                        .WithMany()
                        .HasForeignKey("RouteInfoId");

                    b.Navigation("Pricelist");

                    b.Navigation("RouteInfo");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Provider", b =>
                {
                    b.HasOne("Cosmos_Odyssey.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Cosmos_Odyssey.Entities.Leg", "Leg")
                        .WithMany("Providers")
                        .HasForeignKey("LegId");

                    b.Navigation("Company");

                    b.Navigation("Leg");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Reservation", b =>
                {
                    b.HasOne("Cosmos_Odyssey.Entities.DemandingCustomer", "DemandingCustomer")
                        .WithMany("Reservations")
                        .HasForeignKey("DemandingCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cosmos_Odyssey.Entities.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("DemandingCustomer");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.RouteInfo", b =>
                {
                    b.HasOne("Cosmos_Odyssey.Entities.From", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("Cosmos_Odyssey.Entities.To", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.DemandingCustomer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Leg", b =>
                {
                    b.Navigation("Providers");
                });

            modelBuilder.Entity("Cosmos_Odyssey.Entities.Pricelist", b =>
                {
                    b.Navigation("Legs");
                });
#pragma warning restore 612, 618
        }
    }
}
